name: Standard Workflow CI

on: [push]

jobs:
  check_and_build:
    outputs:
      paths: ""
      recommit: "false"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check Build
        id: checkBuild
        env:
          DEPLOY_BRANCH: ${{secrets.DEPLOY_BRANCH}}
          LC_ALL: C.UTF-8
          LANG: C.UTF-8
        run: |
          set -e
          source scripts/functions.sh
          git config user.name github-actions
          git config user.email github-actions@github.com
          fetch_develop
          #Check to see if more than one Dockerfile has been updated, and if so, error out.
          compare_range=$(get_compare_range)
          paths=$(changed_paths_in_range "${compare_range}")
          print_changed "${compare_range}" "${paths}"
          docker_counter=$(print_changed "${compare_range}" "${paths}" | grep -i "/dockerfile$" | wc -l)
          if [ "${docker_counter}" -gt "1" ]; then
            echo -e "ERROR: Currently we only support uploading one Dockerfile at a time, please break these into separate branches."
            exit 1
          elif [ "${docker_counter}" -eq "1" ]; then
            echo "New or updated Dockerfile found, building image and running CI"
            #Check to see if the proposed version already exists in master
            git show origin/master:relations.yaml > master_relation.yml
            docker_file=$(print_changed "${compare_range}" "${paths}" | grep -i "/dockerfile$")
            python3 scripts/_exist.py master_relation.yml ${docker_file}
            rm master_relation.yml
            echo "::set-output name=paths::$(echo ${paths})"
          else
            echo "No new images found, running CI only."
          fi

      - name: Build Image
        id: build_image
        if: steps.checkBuild.paths != ''
        env:
          DOCKERHUB_ORG: ${{secrets.DOCKERHUB_ORG}}
          paths: ${{ steps.checkBuild.outputs.paths}}
        run: |
          echo "New or updated Dockerfile found, building image and running CI"
          build_images "${DOCKERHUB_ORG}" "${paths}"

      - name: Test Image
        if: steps.checkBuild.paths != ''
        id: testImage
        run: |
          python3 tests/imagecheck.py "${DOCKERHUB_ORG}" ${paths}

      - name: Update relations.yaml
        if: steps.checkBuild.paths != ''
        id: updateYaml
        env:
          DOCKERHUB_ORG: ${{secrets.DOCKERHUB_ORG}}
        run: |
          git show ${DEPLOY_BRANCH}:relations.yaml > relations.yaml
          python3 scripts/relational.py ${docker_file}
          image_name=$(echo ${docker_file} | rev | cut -f3 -d '/' | rev)
          image_version=$(echo ${docker_file} | rev | cut -f2 -d '/' | rev)
          docker_image=$(echo -e "${image_name}:${image_version}")
          echo "::set-env name=DOCKER_IMAGE::$(echo ${DOCKERHUB_ORG}/${docker_image})"
          echo "::set-output name=recommit"::$(echo 'true')"

      - name: CI Only
        if: steps.checkBuild.paths == ''
        id: runAllCI
        env:
          DOCKERHUB_ORG: ${{secrets.DOCKERHUB_ORG}}
        run: |
          python3 scripts/get_latest_paths.py "${DOCKERHUB_ORG}" relations.yaml

  commit_new_release:
    needs: check_and_build
    if: ${{ needs.check_and_build.outputs.recommits == 'true' }}
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Commit New Relations
        id: commitNewRelations
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add relations.yaml
          git commit --allow-empty -m "Updated relations.yaml"

      - name: Push New Relations
        id: pushNewRelations
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          branch: "${{ github.ref }}"

  dockerhub_push:
    needs: commit_new_release
    runs-on: ubuntu-18.04
    steps:
      - name: DockerHub_Login
        id: dockerHubLogin
        uses: actions-hub/docker/login@master
        env:
          DOCKER_PASSWORD: ${{secrets.BICF_DOCKERHUB_PW}}
          DOCKER_USERNAME: ${{secrets.BICF_DOCKERHUB_UN}}

      - name: Push_to_DockerHub
        id: pushToDockerHub
        uses: actions-hub/docker@master
        if: env.CONTINUE == ${{ true }}
        with:
          args: push ${DOCKER_IMAGE}
